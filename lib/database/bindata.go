// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 000001_message_type.up.sql (66B)
// 000002_bandwidth_protocol.up.sql (719B)
// 000003_index_truncate.up.sql (598B)
// 000004_envelope.table.up.sql (531B)
// 000005_pushed_envelope.up.sql (574B)
// 000006_status_version.up.sql (198B)
// 000007_waku_push_filter.up.sql (523B)
// 000008_error_sending_envelope.up.sql (520B)
// 000009_peer_count.up.sql (357B)
// 000010_peer_id.up.sql (299B)
// 000011_waku_push_error.up.sql (369B)
// 000012_waku_generic.up.sql (377B)
// 000013_peer_conn_failure.up.sql (445B)
// 000014_bandwidth_column.up.sql (101B)
// 000015_device_type.up.sql (383B)
// 000016_common_fields.up.sql (5.018kB)
// 000017_peer_count_shard_origin.up.sql (1.263kB)
// 000018_waku_req_res.up.sql (462B)
// 000019_message_check.up.sql (1.298kB)
// 000020_dial_failure.up.sql (955B)
// 000021_missing_messages.up.sql (1.05kB)
// doc.go (72B)

package database

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __000001_message_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x4d\x4e\xcd\x2c\x4b\x4d\xf1\x4d\x2d\x2e\x4e\x4c\x4f\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x85\x88\x85\x54\x16\xa4\x2a\x84\x39\x06\x39\x7b\x38\x06\x69\x18\x99\x9a\x6a\x5a\x73\x01\x02\x00\x00\xff\xff\xf4\x14\x08\x7c\x42\x00\x00\x00")

func _000001_message_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000001_message_typeUpSql,
		"000001_message_type.up.sql",
	)
}

func _000001_message_typeUpSql() (*asset, error) {
	bytes, err := _000001_message_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000001_message_type.up.sql", size: 66, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0x43, 0xcc, 0xef, 0xad, 0x5f, 0x44, 0x58, 0x8d, 0x47, 0x70, 0x5d, 0x23, 0x30, 0xe2, 0x1f, 0xdb, 0x4d, 0xad, 0x6e, 0xd9, 0xe7, 0x50, 0x19, 0x43, 0x1c, 0x37, 0x57, 0xea, 0xc6, 0x57, 0xab}}
	return a, nil
}

var __000002_bandwidth_protocolUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x90\x3f\x4f\xf3\x30\x10\xc6\xf7\x7c\x8a\x1b\x5b\x29\xd3\x2b\x75\xea\xe4\x37\x39\xc0\xc2\x71\x2a\xdb\x41\x74\x42\x56\x72\x82\x48\x6d\x0c\xf1\x85\x81\x4f\x8f\x92\x50\x10\x7f\x5a\x10\x03\x93\x25\x3f\x8f\xee\xee\xf7\xcb\x0c\x0a\x87\xe0\xc4\x7f\x85\x20\xcf\x40\x97\x0e\xf0\x5a\x5a\x67\xe1\xbe\x0f\x1c\xea\xb0\xb3\xec\x39\x1a\xcf\x04\x8b\x04\x00\xa0\x6d\xc0\xa2\x91\x42\xc1\xc6\xc8\x42\x98\x2d\x5c\xe2\x36\x9d\xa2\xbb\x10\x59\x36\x70\x25\x4c\x76\x21\xcc\xe2\xdf\x6a\xb5\x9c\x26\xea\x4a\xa9\xb9\x71\x18\xaa\xfd\x9e\x4e\xf5\x7a\xcf\x24\x3b\xc8\xcb\x6a\x3c\x6c\x63\x30\x93\x56\x96\xfa\x8b\x56\x39\xf0\x77\xb5\xba\x27\xcf\xd4\x08\x06\xa9\x1d\x9e\xa3\xf9\x98\x87\x2e\x72\xef\xdb\x8e\x3f\x43\xdf\x0c\x5d\xfb\x30\x10\xcc\xcf\x62\x26\x4c\xdf\x71\xa4\x6f\x0b\x96\xc9\x72\x9d\x24\x3f\x95\xea\x02\xfb\x5d\xfc\x4b\xad\x3c\x6e\x94\xdd\x11\x0f\x53\x3a\xfa\x3c\xa2\xe9\x55\x63\x2e\x1c\x9e\x56\x37\xa3\xfd\x46\x9e\x50\x0e\xcd\x8b\xbb\x9e\x6a\x6a\x1f\xa9\x29\x28\x46\x7f\x4b\x11\x44\x9e\x43\x56\xaa\xaa\xd0\xb0\x9f\xff\x6c\xfb\x44\x87\x7b\xd7\xc9\x73\x00\x00\x00\xff\xff\x88\xcb\xe5\x75\xcf\x02\x00\x00")

func _000002_bandwidth_protocolUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000002_bandwidth_protocolUpSql,
		"000002_bandwidth_protocol.up.sql",
	)
}

func _000002_bandwidth_protocolUpSql() (*asset, error) {
	bytes, err := _000002_bandwidth_protocolUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000002_bandwidth_protocol.up.sql", size: 719, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfe, 0x83, 0x69, 0xab, 0x3e, 0xf5, 0x8d, 0x44, 0xb2, 0x6e, 0x52, 0x8d, 0x27, 0xe8, 0x95, 0x28, 0x3c, 0xea, 0x29, 0x93, 0x6d, 0xa3, 0x10, 0xde, 0x9b, 0xc8, 0xa6, 0xb9, 0x80, 0xa1, 0x3, 0x6f}}
	return a, nil
}

var __000003_index_truncateUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6a\x80\x30\x10\x86\xf7\x3c\xc5\x8d\x0a\x5d\x3a\x67\x4a\x35\x83\xa0\x11\xd2\x08\xdd\x24\xe8\x91\x0a\xb6\x91\xe4\x5a\xfa\xf8\xc5\x4a\x2b\x18\xb5\x6b\xfe\xef\xbe\xfb\xb9\x18\xdd\xa9\x42\x18\x09\x46\x3c\xd5\x12\x02\x0e\x38\x7d\xe2\xd8\x60\x8c\xd6\x61\xe4\xec\x00\x2c\xc1\x93\x1f\xfc\xfc\x4c\x96\xa2\xb6\x84\xf7\x84\xf1\x64\xe7\xd4\x72\x58\x23\x9c\x0b\xe8\x2c\xe1\xc8\x19\x2b\xb4\x5c\xc1\x4a\x95\xf2\x25\xe9\xd3\x0f\x01\x57\x4e\x10\xb4\x2a\x49\xb3\xbf\x34\xe7\xb7\x9e\x7d\x61\x1f\x3e\xde\x4f\x65\x3b\x92\xfd\x20\xf9\xb1\x5a\x72\x89\x7e\x1a\xbf\x1e\x57\x53\x92\x64\xbf\x2f\xca\xbe\xe1\x03\x5c\xb6\x3c\x39\xdd\xb9\x74\xcb\x6e\xb4\x4c\xd4\x46\xea\xab\x3f\x03\x2d\x95\x68\x24\x14\x6d\xdd\x35\x0a\x5e\x7d\xa4\xaa\x04\xd3\xc2\x82\x18\xaa\x92\x5f\x4f\x6f\x8b\xff\x9d\xff\x0e\x00\x00\xff\xff\x11\x42\xcb\x4c\x56\x02\x00\x00")

func _000003_index_truncateUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000003_index_truncateUpSql,
		"000003_index_truncate.up.sql",
	)
}

func _000003_index_truncateUpSql() (*asset, error) {
	bytes, err := _000003_index_truncateUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000003_index_truncate.up.sql", size: 598, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcf, 0x8, 0x4, 0x47, 0xc8, 0x65, 0x38, 0x79, 0x3e, 0x37, 0xec, 0x4e, 0x1a, 0x24, 0x50, 0x3c, 0x1c, 0x75, 0xe8, 0x3b, 0x2, 0x62, 0x2, 0x52, 0x50, 0xff, 0x4a, 0x8f, 0x9d, 0x71, 0x79, 0xf6}}
	return a, nil
}

var __000004_envelopeTableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x6e\x83\x30\x10\x86\x77\x9e\xe2\x46\x90\x98\x2a\x65\xca\x74\x85\x6b\x63\xc5\x98\xca\x98\xaa\x99\x2a\x02\xa7\x14\xa9\xb1\xa9\x0d\x91\xfa\xf6\x95\x42\x5a\x55\xa9\x42\x27\x0f\xff\xe7\xdf\xe7\xef\x32\x4d\x68\x08\x0c\xde\x4b\x02\xf1\x00\xaa\x34\x40\x2f\xa2\x32\x15\x78\x6e\xb9\x3f\x71\x47\xf6\xc4\xef\x6e\xe0\x00\x71\x04\x00\xd0\x77\x50\x91\x16\x28\xe1\x49\x8b\x02\xf5\x0e\xb6\xb4\x4b\xcf\xd1\x91\x43\x68\x0e\xbc\x69\xc2\x1b\x3c\xa3\xce\x36\xa8\xe3\xbb\xd5\x2a\x39\xd7\xaa\x5a\xca\x19\x0b\x6c\x47\x1c\x41\x28\x43\x8f\xa4\xaf\xc2\xd6\x73\x33\x72\x77\x33\x1f\xdd\xd0\xb7\x4b\xed\xc3\xb4\xaf\xa6\xbd\xf9\x0f\xbb\x7c\xcf\x6f\xf9\xb3\x16\xf9\x12\x69\x5d\xc7\xaa\x39\xf2\xe2\xa3\xde\xb5\x1c\x42\x6f\x0f\xe4\xbd\xf3\x4b\x68\x56\xaa\xca\x68\x14\xca\xfc\x55\xfc\x3a\xd9\xfe\x63\x62\x98\x8f\x78\x16\x95\xfe\xf6\x9a\x5e\x0d\x9e\xfe\x8c\x97\x44\xc9\x3a\x8a\x50\x1a\xd2\x97\x7d\x7e\xd7\x17\xf3\xf5\x00\x98\xe7\x90\x95\xb2\x2e\xd4\x4d\x4b\xeb\xe8\x2b\x00\x00\xff\xff\x9d\x3f\xc2\xc6\x13\x02\x00\x00")

func _000004_envelopeTableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000004_envelopeTableUpSql,
		"000004_envelope.table.up.sql",
	)
}

func _000004_envelopeTableUpSql() (*asset, error) {
	bytes, err := _000004_envelopeTableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000004_envelope.table.up.sql", size: 531, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0xee, 0x49, 0xa0, 0x48, 0x2b, 0x8b, 0xe8, 0xd3, 0x6a, 0xae, 0x7f, 0x62, 0x65, 0x8a, 0x45, 0xbb, 0x8a, 0xee, 0xcd, 0x13, 0xde, 0xd6, 0x33, 0xe2, 0x3f, 0x32, 0xff, 0xfe, 0xf4, 0xda, 0xe7}}
	return a, nil
}

var __000005_pushed_envelopeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcf\x6a\xf2\x40\x14\xc5\xf7\x79\x8a\xbb\x08\x24\x81\xac\x3e\x70\x95\xd5\x18\xef\xa7\x83\x71\x12\x26\x63\xab\x2b\xc9\x9f\x8b\x49\x89\x49\xea\xcc\x14\x7c\xfb\xa2\xa1\xa5\x16\xaa\xab\x81\x39\x87\xdf\x3d\x9c\xb3\x48\xc1\x75\x61\x8e\x4b\x2e\x1c\x00\x80\x58\x22\x53\x08\x6a\x9f\x21\x8c\xb6\xec\x5a\xdd\x1c\x4e\x64\x9a\xa1\x06\x96\x03\x8a\xed\x06\x7c\x2f\x69\x8f\x8d\xc9\xac\x6e\xbc\x10\x3c\x49\x5d\x71\xf1\x82\xc8\xc1\x5d\x8c\x99\xe2\xe9\x04\x7a\x5d\xa1\x80\xda\x8e\x5d\x5b\x15\x86\x0e\x43\xf9\x46\x95\x01\x75\xfd\xed\x6d\xd7\x45\x0e\x8a\x05\xb8\x6e\xe4\x38\x5f\x27\xd9\x3c\x41\xe0\xff\x41\xa4\x0a\x70\xc7\x73\x95\x83\xa6\xde\x60\xff\x41\xdd\x30\x92\x06\xff\x06\x6e\x6b\xc8\x51\x72\x96\x40\x26\xf9\x86\xc9\x3d\xac\x71\x1f\xde\xa4\x13\x69\x5d\x1c\x69\x55\xe8\x06\x5e\x98\x8c\x57\x4c\xfa\xff\x66\xb3\xe0\x86\x14\xdb\x24\x99\x6c\x57\x2a\x33\xc0\x85\xc2\x25\xca\x5f\x62\x75\xa6\xc2\x50\xfd\xa7\x6e\x86\xb1\xad\x1e\xd1\x47\x5b\xe6\xb6\x54\xcf\x6c\x9a\xfa\x9a\xce\x6b\xba\x6c\xf9\xe2\x91\xaf\x1f\x6a\x12\xc5\x89\x9e\x9c\xbc\x0e\xb5\x99\x76\xba\x9f\x6d\x72\xc4\xa9\xc8\x95\x64\x5c\xa8\xfb\x4e\x0f\xb6\x6f\xdf\x2d\xc1\xf4\xf8\x53\x33\xe1\xcf\x22\xc3\xbb\xa4\xe1\x77\x9e\xc0\x09\x22\xe7\x33\x00\x00\xff\xff\x3d\x18\x50\x60\x3e\x02\x00\x00")

func _000005_pushed_envelopeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000005_pushed_envelopeUpSql,
		"000005_pushed_envelope.up.sql",
	)
}

func _000005_pushed_envelopeUpSql() (*asset, error) {
	bytes, err := _000005_pushed_envelopeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000005_pushed_envelope.up.sql", size: 574, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7d, 0xaf, 0x8a, 0xcb, 0x97, 0x1e, 0xc6, 0xf6, 0x86, 0xe4, 0x1b, 0x67, 0x10, 0x87, 0x8e, 0x80, 0x1d, 0x5a, 0x7d, 0x64, 0xd0, 0x89, 0x3f, 0x1e, 0x6f, 0x93, 0x87, 0x4a, 0xd7, 0x87, 0xb8, 0x5e}}
	return a, nil
}

var __000006_status_versionUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x4d\x4e\xcd\x2c\x4b\x4d\xf1\x4d\x2d\x2e\x4e\x4c\x4f\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x28\x2e\x49\x2c\x29\x2d\x0e\x4b\x2d\x2a\xce\xcc\xcf\x53\x08\x73\x0c\x72\xf6\x70\x0c\xd2\x30\x36\xd4\xb4\xe6\xc2\x66\x84\x6b\x5e\x59\x6a\x4e\x7e\x01\x59\x66\x14\xa7\xe6\x95\x90\xa8\x1f\x10\x00\x00\xff\xff\xeb\x4e\x39\x66\xc6\x00\x00\x00")

func _000006_status_versionUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000006_status_versionUpSql,
		"000006_status_version.up.sql",
	)
}

func _000006_status_versionUpSql() (*asset, error) {
	bytes, err := _000006_status_versionUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000006_status_version.up.sql", size: 198, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0x11, 0xee, 0x9f, 0x4f, 0xf5, 0x0, 0x9a, 0x98, 0xe9, 0x44, 0x21, 0x2e, 0x57, 0xf7, 0xae, 0xf3, 0xb2, 0x3d, 0x94, 0x40, 0x69, 0xa7, 0x1d, 0x62, 0x57, 0x31, 0x9f, 0x60, 0x6, 0xed, 0x80}}
	return a, nil
}

var __000007_waku_push_filterUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x4a\x03\x31\x10\x86\xcf\xdd\xa7\x98\xe3\x2e\xec\x49\xe8\xc9\x53\x5c\x52\x1b\x5c\xd3\x92\x44\xb1\x27\x49\x37\x03\x0d\x6e\xb3\xdb\x64\x42\x7d\x7c\xa1\x82\x76\xc5\xb6\xa7\x61\xf8\x3f\xf8\x87\x6f\x1a\xc5\x99\xe1\x60\xd8\x43\xcb\x41\x2c\x40\xae\x0c\xf0\x37\xa1\x8d\x86\xa3\xfd\xc8\xeb\x9c\x76\x0b\xdf\x13\x46\x28\x8b\x99\x77\xa0\xb9\x12\xac\x85\xb5\x12\xcf\x4c\x6d\xe0\x89\x6f\xea\x62\x76\xb4\x7d\x8f\xc4\x9c\x8b\x98\x12\xbc\x32\xd5\x2c\x99\x2a\xef\xe6\xf3\xaa\x2e\x66\x23\x62\x14\x4e\x63\x70\x18\x27\xd9\xa9\x4b\xbe\xb4\xed\x0f\xa4\x70\x1c\x22\x5d\xc1\x12\x1e\x32\x86\x0e\x97\x36\xed\x6e\x42\x66\x20\xdb\xdf\xa4\x44\x70\xf8\x79\x91\xea\x86\x40\x18\xc8\x0c\xa3\xef\x2e\x1f\x9f\xb7\x29\x6f\xaf\x33\xe4\xf7\x98\xc8\xee\x47\x10\xd2\xf0\x47\xae\x26\x2d\x11\x2d\xa1\x63\xf4\x4f\x58\x00\x00\x34\x2b\xa9\x8d\x62\x42\x9a\x3f\x5f\x79\xcf\xc1\x1f\x32\xc2\xf7\x28\xcf\x5d\xd7\x30\x95\x5a\xc3\xb9\xbd\xdf\xed\x24\xa0\x2a\xaa\xfb\xaf\x00\x00\x00\xff\xff\x48\xf0\x3d\x30\x0b\x02\x00\x00")

func _000007_waku_push_filterUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000007_waku_push_filterUpSql,
		"000007_waku_push_filter.up.sql",
	)
}

func _000007_waku_push_filterUpSql() (*asset, error) {
	bytes, err := _000007_waku_push_filterUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000007_waku_push_filter.up.sql", size: 523, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5d, 0xa, 0x2c, 0x93, 0xa, 0x1f, 0xeb, 0x49, 0x60, 0xe2, 0x8, 0x46, 0xb5, 0x16, 0xa4, 0xa9, 0x7f, 0xec, 0xfb, 0xe1, 0xdc, 0x12, 0x15, 0x17, 0x1, 0x28, 0xa3, 0xca, 0xeb, 0x45, 0x81, 0x31}}
	return a, nil
}

var __000008_error_sending_envelopeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcf\x6a\x02\x31\x10\x87\xef\x3e\xc5\x1c\x77\x61\x2f\x6d\xf1\xd4\x53\xba\x4d\x6b\x70\x8d\x25\x89\xa2\x27\x59\xcd\xe0\x06\xdc\x64\x9b\x3f\x85\xbe\x7d\x61\x43\xa5\x95\x56\x4f\x61\xf8\x3e\x7e\x93\x99\xa9\x05\x25\x8a\x82\x22\x4f\x0d\x05\xf6\x02\x7c\xa9\x80\x6e\x98\x54\x12\xd0\x7b\xe7\x25\x5a\x6d\xec\x91\xda\x0f\x3c\xb9\x01\xa1\x98\x00\x00\x18\x0d\x92\x0a\x46\x1a\x78\x13\x6c\x41\xc4\x16\xe6\x74\x5b\x8d\xa8\xc7\x10\xda\x23\xce\xda\xd0\xc1\x9a\x88\x7a\x46\x44\x71\x3f\x9d\x96\x63\x32\x5f\x35\x4d\xd6\x02\xda\x48\x22\x30\xae\xe8\x2b\x15\x17\xf0\xe0\xb1\x8d\xa8\xff\xe5\xd1\x0d\xe6\x70\x2d\x7d\x48\x7b\x99\xf6\xea\x96\x16\xd0\x6a\xf4\x73\xfc\x5c\xb1\xe7\x6b\x9e\x75\x1a\x79\xdb\xe3\x8d\x96\x27\x13\xba\x05\xc6\xce\xe9\xef\x6a\xd7\x8f\x65\x36\xc6\x7d\x82\xa2\x1b\x75\xf9\x8d\xd8\xc6\x14\xd6\xe8\x83\x71\xf6\xdc\xe3\xe1\xae\xcc\xb8\x5e\x72\xa9\x04\x61\x5c\xfd\x79\x92\x5d\xb2\xe6\x3d\x21\xe4\xa7\xc8\x8b\xad\x7e\xde\xa1\xfa\x35\x68\x75\x1e\xa7\xca\x79\xe5\xa4\x7c\x9c\x7c\x05\x00\x00\xff\xff\xcd\xf7\x68\x14\x08\x02\x00\x00")

func _000008_error_sending_envelopeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000008_error_sending_envelopeUpSql,
		"000008_error_sending_envelope.up.sql",
	)
}

func _000008_error_sending_envelopeUpSql() (*asset, error) {
	bytes, err := _000008_error_sending_envelopeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000008_error_sending_envelope.up.sql", size: 520, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0x41, 0xcc, 0x90, 0x99, 0x71, 0xc7, 0x9f, 0x5e, 0x8, 0x8a, 0x9b, 0xd8, 0x1a, 0x2d, 0xd4, 0xef, 0x60, 0x39, 0xab, 0x3f, 0x59, 0x99, 0x15, 0x17, 0x72, 0xac, 0xd7, 0x17, 0x6, 0xec, 0xa3}}
	return a, nil
}

var __000009_peer_countUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\x4f\xc3\x30\x10\x46\xf7\xfc\x8a\x6f\x4c\xa4\x2c\x80\x3a\x31\x1d\xd1\x01\x56\x83\x8b\x2e\x6e\x45\x27\x14\x91\x1b\x3c\xc4\x29\xb1\x3d\xf0\xef\x91\x1a\x29\x05\xa9\x30\xdd\xf0\x4e\xdf\x7b\x8d\x30\x39\x86\xa3\x87\x96\x61\x1e\x61\x77\x0e\xfc\x66\x3a\xd7\xe1\xa4\x3a\x37\x53\x0e\x09\x65\x01\x00\x7e\x40\xc7\x62\xa8\xc5\xab\x98\x17\x92\x23\xb6\x7c\xac\xcf\xe8\x63\xd6\x3e\xe9\x40\x09\xc6\x3a\x7e\x62\x39\xef\xd8\x7d\xdb\x2e\xfc\x32\x75\x9d\x87\x69\x50\xdb\x8f\x8a\x03\x49\xf3\x4c\x52\xde\x6e\x36\xd5\x95\x9f\xad\x7e\xed\xfd\xf0\xdf\x57\xf2\xa3\xc6\xd4\x8f\xa7\x3f\x4c\x31\xf5\x29\xc7\x83\xce\xd1\x4f\x61\x1d\xba\xbb\xa9\x16\xdc\xec\x6c\xe7\x84\x8c\x75\x97\xe6\xf7\x1c\xfc\x67\x56\x2c\xa7\x5c\x0d\xf5\x9a\x5d\xff\x88\xab\x7f\x2b\xaa\xa2\xba\x2f\xbe\x03\x00\x00\xff\xff\xfa\x1d\x0e\x4f\x65\x01\x00\x00")

func _000009_peer_countUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000009_peer_countUpSql,
		"000009_peer_count.up.sql",
	)
}

func _000009_peer_countUpSql() (*asset, error) {
	bytes, err := _000009_peer_countUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000009_peer_count.up.sql", size: 357, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc4, 0xd, 0xd9, 0xb6, 0xe8, 0x4a, 0xc0, 0xfa, 0x9d, 0xec, 0x4b, 0x7f, 0xa7, 0xc4, 0x96, 0x14, 0x48, 0xb7, 0xc9, 0xf2, 0x3d, 0xa9, 0xbb, 0xf8, 0x48, 0x6d, 0xaa, 0x75, 0xa5, 0x35, 0x8b, 0x1f}}
	return a, nil
}

var __000010_peer_idUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x48\x4d\x2d\x4a\xce\x2f\xcd\x2b\x51\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x03\x0b\x7a\xa6\x28\x84\x39\x06\x39\x7b\x38\x06\x69\x18\x99\x9a\x6a\x5a\x73\x21\xeb\x2a\x4a\x4d\x4e\xcd\x2c\x4b\x4d\xf1\x4d\x2d\x2e\x4e\x4c\x4f\x2d\x26\x4b\xb3\x6b\x5e\x59\x6a\x4e\x7e\x01\x89\xba\x8b\x53\xf3\x4a\xc8\xd3\x99\x5a\x54\x94\x5f\x14\x9c\x9a\x97\x92\x99\x97\x0e\x33\x81\x90\x01\x80\x00\x00\x00\xff\xff\xe7\xc8\x16\x4d\x2b\x01\x00\x00")

func _000010_peer_idUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000010_peer_idUpSql,
		"000010_peer_id.up.sql",
	)
}

func _000010_peer_idUpSql() (*asset, error) {
	bytes, err := _000010_peer_idUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000010_peer_id.up.sql", size: 299, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe9, 0x10, 0x44, 0x22, 0x38, 0xe7, 0xb0, 0xe1, 0xd2, 0x77, 0x25, 0xe, 0x66, 0xff, 0x39, 0xb1, 0xaa, 0x5d, 0xe1, 0xd3, 0x6b, 0x64, 0xe2, 0x4c, 0x60, 0x15, 0x6e, 0x86, 0xc8, 0x3f, 0xe2, 0x70}}
	return a, nil
}

var __000011_waku_push_errorUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcd\x4a\xc4\x40\x10\x84\xcf\x99\xa7\xa8\x63\x02\x73\x12\xf6\xe4\x69\x0c\xa3\x0e\x66\x67\x97\xce\x28\xee\x49\xb2\x49\xa3\x41\xf2\xe3\xfc\xe0\xeb\x8b\x06\x24\x2b\xf1\xd4\x87\xaf\xba\xaa\xab\x4b\xd2\xca\x69\x38\x75\x53\x69\x98\x5b\xd8\x83\x83\x7e\x36\xb5\xab\xf1\xd9\xbc\xa7\x63\x0a\x6f\xda\xfb\xc9\x23\x17\x59\xdf\xa1\xd6\x64\x54\x85\x23\x99\xbd\xa2\x13\x1e\xf4\x49\x8a\x6c\x66\xf6\xa6\xc3\x93\xa2\xf2\x5e\x51\x7e\xb5\xdb\x15\x3f\x3e\xf6\xb1\xaa\xa4\xc8\xf8\x7b\x7f\xcf\x21\x34\xaf\xfc\xaf\x68\xf1\x20\x1e\xa6\x78\x29\x92\x22\x6b\xa7\x31\xf2\x18\xdd\x34\xf7\xed\x5f\x36\xa7\x73\x48\xe7\x4d\x14\xfb\x81\x43\x6c\x86\x19\xc6\x3a\x7d\xa7\x69\x9d\xd7\x7a\x6e\x22\x77\x2a\x6e\x40\x01\x00\xe5\xc1\xd6\x8e\x94\xb1\xee\xf2\x11\x2f\x69\xec\x3f\x12\x63\x19\xf9\x72\xb7\xc4\xba\xa4\xc4\x6f\xb4\xc4\xba\x58\x21\x8a\xeb\xaf\x00\x00\x00\xff\xff\x1f\x69\xe4\xd8\x71\x01\x00\x00")

func _000011_waku_push_errorUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000011_waku_push_errorUpSql,
		"000011_waku_push_error.up.sql",
	)
}

func _000011_waku_push_errorUpSql() (*asset, error) {
	bytes, err := _000011_waku_push_errorUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000011_waku_push_error.up.sql", size: 369, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0xd0, 0xf7, 0xb9, 0xd, 0xe6, 0xc8, 0x35, 0x3b, 0x4e, 0xc7, 0xf2, 0xfb, 0x1, 0x33, 0x65, 0x4b, 0x4c, 0xcd, 0x6a, 0x96, 0xd3, 0x13, 0x33, 0xcf, 0x15, 0xd5, 0x6f, 0xb, 0xb1, 0x7c, 0xa5}}
	return a, nil
}

var __000012_waku_genericUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcd\x4a\x03\x31\x14\x85\xd7\xc9\x53\x9c\xe5\x0c\xcc\x4a\xe8\xca\x55\x1c\x63\x0d\x4e\x53\xc9\x44\xb1\x2b\x49\x33\x97\x12\x64\x7e\xcc\x24\x88\x6f\x2f\x3a\xa0\xb5\xb4\xab\xbb\xf8\x0e\xe7\x1e\xbe\xda\x48\x61\x25\xac\xb8\x69\x24\xd4\x1d\xf4\xd6\x42\xbe\xa8\xd6\xb6\xf8\x70\x6f\x79\x4d\x03\xc5\xe0\x51\x70\x16\x3a\xb4\xd2\x28\xd1\xe0\xd1\xa8\x8d\x30\x3b\x3c\xc8\x5d\xc5\xd9\x44\x14\x55\x87\x67\x61\xea\x7b\x61\x8a\xab\xd5\xaa\xfc\x69\xd1\x4f\x4d\x53\x71\xd6\x53\x8a\xc1\xdb\xcf\x89\x2e\x46\x38\xf3\xe3\x90\x68\x48\x76\x9c\x82\xff\x17\xfb\xee\xcf\xfb\x39\xef\xcf\xa2\xc3\xb2\xee\xd6\x25\x77\x8a\x28\xc6\x31\x6e\x68\x9e\xdd\x81\x4e\x18\x67\x29\xf4\x34\x27\xd7\x4f\x50\xda\xca\xb5\x34\xc7\x6b\x7c\x24\x97\xa8\x13\xe9\x0c\xe4\x00\x50\x6f\x75\x6b\x8d\x50\xda\x1e\x2b\x7a\xcd\x43\x78\xcf\x84\xe5\x14\xbf\x2f\x2a\xfc\x19\xa8\xb0\xc8\x2a\x79\x79\xfd\x15\x00\x00\xff\xff\x67\x23\xdf\xab\x79\x01\x00\x00")

func _000012_waku_genericUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000012_waku_genericUpSql,
		"000012_waku_generic.up.sql",
	)
}

func _000012_waku_genericUpSql() (*asset, error) {
	bytes, err := _000012_waku_genericUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000012_waku_generic.up.sql", size: 377, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0x8a, 0x92, 0x6c, 0x8e, 0x54, 0x51, 0xd5, 0x8f, 0xc8, 0x39, 0xb9, 0xed, 0x75, 0xcd, 0xe8, 0x54, 0xba, 0xa6, 0xe1, 0x23, 0x80, 0x64, 0xa, 0x47, 0x1d, 0x5, 0x27, 0x3d, 0xff, 0x5, 0xc6}}
	return a, nil
}

var __000013_peer_conn_failureUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6b\xc3\x30\x14\x84\x77\xff\x8a\x1b\x6d\xf0\xd2\x96\x4c\x9d\x54\xa1\xb4\x22\xae\x12\x9e\x95\xd0\x4c\x45\x54\xaf\x20\xa8\xe5\xd4\x96\x86\xfe\xfb\x92\xb8\x04\x12\x48\x3d\xbd\xe1\x8e\xef\xdd\x9d\x24\x25\xac\x82\x15\x4f\x8d\x82\x5e\xc2\xac\x2d\xd4\x9b\x6e\x6d\x8b\x03\xf3\x20\xfb\x18\x97\x2e\x7c\xe5\x81\x51\x16\x00\x10\x3c\x5a\x45\x5a\x34\xd8\x90\x7e\x15\xb4\xc7\x4a\xed\xeb\x93\xf4\x31\xb0\x4b\xec\x45\x82\x36\x56\x3d\x2b\x3a\xd1\xcc\xb6\x69\x26\xfd\x08\xd4\x1e\x3b\x41\xf2\x45\x50\x79\xbf\x58\x54\x57\x8e\xd8\x7b\x36\xae\xe3\x39\xcf\x8a\x7f\xb6\xe1\x5f\x52\x0a\x1d\x8f\xc9\x75\x87\x1b\x59\xc6\xe4\x52\x1e\x77\x3c\x8c\xa1\x8f\x67\xd0\xc3\x5d\x35\xc9\x9f\x53\x67\xd9\xe7\x78\xab\xcd\xd1\xc2\x7e\x33\xdb\x49\xae\x4d\x6b\x49\x68\x63\xaf\x17\x7d\xcf\x31\x7c\x67\xc6\x74\xca\x73\xe4\xfa\x6f\xa9\xfa\xe2\x47\x7d\x11\xaa\x2a\xaa\xc7\xe2\x37\x00\x00\xff\xff\xce\x1d\xdb\x9b\xbd\x01\x00\x00")

func _000013_peer_conn_failureUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000013_peer_conn_failureUpSql,
		"000013_peer_conn_failure.up.sql",
	)
}

func _000013_peer_conn_failureUpSql() (*asset, error) {
	bytes, err := _000013_peer_conn_failureUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000013_peer_conn_failure.up.sql", size: 445, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x23, 0xf5, 0xfe, 0xdf, 0xe5, 0xd2, 0xcc, 0x5b, 0x68, 0x38, 0x76, 0x8c, 0xe9, 0x91, 0xea, 0x47, 0xe1, 0xc0, 0x9a, 0x5b, 0xb, 0xc0, 0xc, 0x3d, 0x29, 0x31, 0x2b, 0x35, 0x41, 0xea, 0xdd, 0x2f}}
	return a, nil
}

var __000014_bandwidth_columnUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x28\xca\x2f\xc9\x4f\xce\xcf\x09\x2e\x49\x2c\x29\x0e\xc9\x2f\x49\xcc\x29\xe6\x82\xc8\x3b\xfb\xfb\x84\xfa\xfa\x29\x94\x80\xc4\x3c\xf3\x14\x42\x22\x03\x5c\x15\x9c\x3c\xdd\x3d\xfd\x42\x74\xb0\xa8\xf0\x2f\x2d\x41\x56\x62\xcd\x05\x08\x00\x00\xff\xff\xe4\x78\xe5\x2f\x65\x00\x00\x00")

func _000014_bandwidth_columnUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000014_bandwidth_columnUpSql,
		"000014_bandwidth_column.up.sql",
	)
}

func _000014_bandwidth_columnUpSql() (*asset, error) {
	bytes, err := _000014_bandwidth_columnUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000014_bandwidth_column.up.sql", size: 101, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x75, 0x58, 0xaa, 0xd3, 0x31, 0xd2, 0xba, 0x86, 0x8b, 0x7a, 0x64, 0xff, 0x52, 0xd, 0xdf, 0xe5, 0xf5, 0xee, 0xa5, 0x76, 0x48, 0xb2, 0xaf, 0x64, 0xac, 0x38, 0x39, 0xef, 0x55, 0xb7, 0xa1}}
	return a, nil
}

var __000015_device_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xb1\x0a\xc2\x30\x14\x46\xe1\xdd\xa7\xb8\xa3\xae\x42\x27\xa7\xd8\x56\x1c\x52\x85\x18\xdd\x4b\xf2\x53\x02\xe5\x26\xdc\xb4\x01\xdf\x5e\x1c\x04\x47\xcd\x03\x9c\x6f\x38\x4a\xdb\xde\x90\x55\x47\xdd\x53\x02\xc4\xc5\x95\x17\x52\x5d\x47\xed\x55\xdf\x87\x0b\x79\x94\xe0\x60\x9f\x09\xf4\x50\xa6\x3d\x2b\xb3\xdd\x37\xcd\xee\xb0\xf9\x2e\x05\x0e\xa1\xc0\x0f\xc8\x79\x9c\x90\xab\x81\x9e\x0b\xe6\x98\x2a\x84\x0c\x5e\xea\x6b\x88\x44\xb9\x81\x7d\xe0\xe9\xa3\xfc\x8d\xbc\xff\xb5\x91\xf9\x34\x86\x79\x95\x9f\xfa\x57\x00\x00\x00\xff\xff\x8b\x69\x8c\x77\x7f\x01\x00\x00")

func _000015_device_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000015_device_typeUpSql,
		"000015_device_type.up.sql",
	)
}

func _000015_device_typeUpSql() (*asset, error) {
	bytes, err := _000015_device_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000015_device_type.up.sql", size: 383, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0xc, 0x2, 0xe1, 0x71, 0x22, 0x1b, 0xd3, 0xd8, 0x68, 0x81, 0x72, 0x9e, 0xb2, 0x68, 0xf2, 0xc5, 0x79, 0xf5, 0x98, 0xa6, 0xc, 0x44, 0xb2, 0x74, 0x8a, 0x7c, 0xdb, 0x3a, 0x5d, 0xb5, 0x88}}
	return a, nil
}

var __000016_common_fieldsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x4d\x73\xda\x48\x13\xbe\xeb\x57\xf4\xc1\x94\xa1\x0a\xe7\xf0\x56\xe5\x12\xea\x3d\x28\x62\x30\x53\xc1\x82\x8c\x86\xc4\x39\x51\x8a\xd4\xd8\x5a\xc3\x88\x48\x83\xb3\xfc\xfb\xad\xf9\x90\x84\x90\x04\x78\xbd\xf1\x0d\x4d\x7f\x3e\xdd\xfd\xf4\x8c\xef\xee\xc0\xcb\x30\x94\x08\x12\x37\xb8\x45\x99\x1d\x18\x46\x69\x16\x83\x0c\x7f\x6e\xd0\xf1\x18\x71\x39\x01\xee\x7e\x9e\x11\xa0\x13\xf0\xe7\x1c\xc8\x23\x0d\x78\xd0\x50\xe8\x3b\x00\x00\x49\x0c\x01\x61\xd4\x9d\xc1\x82\xd1\x07\x97\xfd\x80\x2f\xe4\xc7\x50\x1f\x89\x34\x46\x3f\xdc\x22\x7c\x73\x99\x37\x75\x59\xff\x7f\x1f\x3f\x0e\xcc\xd1\x0e\x31\xa3\x71\xcb\x41\x2e\x43\xb9\xcf\xbf\x61\x96\x27\xa9\x68\x39\x8f\xf1\x35\x89\x90\x1f\x76\x6d\x56\x23\x9d\x59\xec\x4a\xa0\x3e\x27\xf7\x84\xc1\x98\x4c\xdc\xe5\x4c\xa5\xc0\x99\xeb\xf1\x3e\x59\xcc\xbd\x29\x4c\xd8\xfc\x01\xfc\xf9\xf7\xfe\x60\xf0\xe9\x93\x15\x75\x06\x23\xc7\xb9\xbb\x83\xc9\x5e\x44\x52\xf9\x96\x29\x84\x71\x0c\x99\x4e\x96\xc6\x10\xa5\x9b\xfd\x56\x14\x00\xcd\x19\x30\xb2\x98\xb9\x1e\x81\xc9\xd2\xf7\x38\x9d\xfb\x4a\x7c\x55\x82\x64\xf4\x56\x46\xab\xaf\xc1\x5d\x09\x05\x06\x27\x8f\x7c\x00\x8c\xf0\x25\xf3\x03\xf8\x36\xa7\x63\x70\x03\xb8\xb9\x71\x3e\x93\x7b\xea\xeb\x3c\xc8\x23\xf1\x96\x9c\xc0\x3a\xcd\xb6\xa1\xec\xdf\xba\x33\x4e\x98\xad\x49\x8f\x82\x3b\x1e\x83\x37\x9f\x2d\x1f\xfc\x93\x0a\x95\xb1\xda\x9c\x6e\x87\x50\x39\x1e\x8c\xb4\x6d\xe6\xd2\x80\x28\x25\xea\x11\xb8\x75\xe3\x18\x1b\x39\xaa\xd4\xb5\xde\x27\xe8\xd5\x4c\x8c\x1c\xf2\xe8\x91\x85\x4a\x56\xdb\xfa\x3e\x25\x3e\xcc\xf9\x94\xb0\x00\xf8\x94\x98\x8f\x95\x93\x52\x18\x6e\x49\x96\xa5\x99\x02\x28\x11\x4f\x9d\xee\xa0\x77\xea\x70\x08\xc1\xd7\x19\x61\xec\x61\xe4\x10\x7f\x3c\x72\x6e\x6e\x60\xe6\xfa\xf7\x4b\xf7\x9e\xc0\x6e\xb3\x7b\xca\x7f\x6d\x4c\xd5\x1e\x92\xa7\x2c\xd4\x65\x5b\x17\xf5\x5b\xa7\x19\xe0\xdf\x49\x2e\x2b\x97\xf9\xb9\xea\x6d\xb5\x09\x5c\x15\x3a\x2b\xab\xf3\xce\xda\x95\x98\x7c\xa7\x7c\x0a\x89\xc8\x31\x93\x78\xd4\x27\xd6\x8d\xb2\xd3\x2f\x65\xd5\x1f\xf5\x03\xc2\xb8\x2a\xe5\xbc\x39\x7a\xc5\x68\x0d\xed\x24\x0d\xeb\x83\x33\x3c\x9a\x93\x61\x35\x16\x83\x9a\x83\x80\xcc\x88\xc7\x61\x4c\x03\x4e\x7d\x8f\xc3\xbf\xb3\x59\x33\xa9\x07\xab\x47\x6b\xdf\x0c\x5a\xd4\xbf\x87\x24\x1e\xbe\xd7\x49\x95\xc1\x72\x31\x56\x95\xec\x51\xa8\x4e\x03\xc2\xab\xe6\xfa\x3f\x24\xd1\xfa\x43\x12\x3b\xb5\xe0\xba\x0b\x90\x44\xeb\xaa\x56\x53\xc2\x08\xc8\x0f\x25\x83\x19\x63\xc5\xcf\xa3\xfc\x5c\x7f\x0c\xf2\x83\xa5\x33\x23\x65\x7e\x34\x64\xea\xcc\x66\x44\x6b\xdf\x1a\x1a\x47\x5c\x67\xc4\xab\x0f\x0d\xd9\x8a\xfa\x8c\x68\xf9\xdb\x4c\xfd\xc9\x54\xd5\x58\xa1\x85\x16\xbc\x74\xbb\xdb\xa0\xc4\xd8\x4e\x45\x31\x4f\x7f\x84\x15\xac\x0b\xf1\x04\x71\x28\xc3\xca\xcf\x3b\xe8\xe0\x98\xc4\xb7\x69\x9c\xac\x0f\xc6\xca\x79\x02\xd0\x82\x2b\x2d\xf8\xc6\xa1\x3f\xda\xaa\xcf\xa8\x32\xc0\xe4\x49\xc0\x0b\x1e\x20\x4a\x45\x2e\xb3\x30\x11\xa6\x4b\x2b\x95\xab\x79\xde\x0f\x38\x73\xa9\xcf\x61\xfd\xb2\xea\xd1\xd5\x09\x15\xd4\xc7\x6f\xce\x08\xbd\xf7\xd5\x06\x86\x7e\x31\x08\x2a\xf4\x09\x61\xc4\xf7\x48\x63\x87\xf7\x93\x78\x70\xae\x35\x4c\x90\xc7\xc5\x2d\x0b\x1c\xef\x77\x9b\x24\x52\x84\x99\xfe\xfc\x0b\x23\x59\x2f\x75\xb3\xa5\x26\xad\xa0\x40\xb8\xc9\x30\x8c\x0f\x86\xa9\x73\x48\x45\xa3\xb9\x74\x0c\xaa\xda\x05\xd2\x0c\xb7\xe9\x2b\xda\xe5\x91\x83\x7c\x0e\x25\x84\x19\x82\x48\x7f\x43\x22\x4e\x53\xbc\x62\xa1\x96\x51\x8f\xd9\x7c\x71\xb4\x59\xed\x56\x2d\x47\x69\x78\x41\xb0\xe4\xb6\x0b\x72\x75\xc6\xbb\x20\x6c\x69\xf2\x82\x54\xc5\x0c\xa7\x3b\xbf\x40\x6d\x9c\xa5\x3b\xdd\x9d\x7b\x91\xfc\xda\xe3\x69\x63\x5e\x68\x45\xeb\xb5\xec\xc5\xca\x73\x8f\xae\x8c\xc5\x8b\x14\xa3\xd6\x74\xf8\x62\x46\x44\xe0\xef\x62\xfb\xab\xfb\x8b\xbf\x9c\xcd\xae\xba\xf9\xe8\x9f\x36\xfb\x92\xe9\x15\xed\x17\x56\x5a\xd3\xef\x24\x37\x35\xf1\xaa\x89\x93\x54\xe4\x7f\x90\xe0\x34\xb1\x28\x82\x7b\x2f\xaf\xb9\xcd\x0b\xa9\xa2\x38\x0c\xa3\x67\x7b\x7f\xb7\x4b\xfd\xcc\x55\xf4\x56\x75\x54\x94\xee\x85\xbc\x1d\x8c\xae\x91\xcf\x30\xc2\xe4\x15\xe3\x2d\xe6\x79\xf8\x84\xf9\x1b\xd5\x50\xbc\xe2\x26\xdd\x5d\xad\x97\xa3\x90\x6f\xd5\x41\x85\x73\x8e\x42\x5d\x2f\x0b\xdd\x2b\x55\x0d\x1a\x42\xac\xc3\x64\xb3\xcf\xb4\x96\x46\x7a\xb7\xdb\x1c\x8e\xb6\x5f\x2b\xca\x9d\x57\xc6\x56\x8c\xbb\xa5\xcf\x20\x7c\x59\xa9\x0d\xab\x6e\xad\x2e\x74\xbb\x35\x2e\x60\x7b\x09\x83\x2e\x64\x6b\xa3\xd7\x8e\xee\xf1\x3e\x6e\x47\xb4\x26\x71\x0e\xc5\x56\xc1\x56\x1c\x6a\x92\x9d\x68\xd5\xa4\x2e\x21\xd4\x92\x47\x03\x95\x92\x9e\x8b\xf7\x4b\x0e\xe1\x5a\x62\x06\xfb\x1c\x1d\xcd\xbe\x57\x3c\x33\x47\x27\x92\x5d\xb5\x69\xc8\x1d\x45\x68\xc2\x61\x68\xb6\x5e\x73\x5b\xe4\xce\x31\x27\x17\x50\x3e\x58\xcc\xc1\x39\xb9\xb4\x9c\x0a\xd8\x65\x01\xce\xd2\xa7\x5f\x97\xc4\xbe\x79\x0a\x4e\xb3\xcf\xf8\xe7\x50\xaa\x97\x81\xfe\x61\xab\x39\x0d\xf3\x67\xfb\xc5\x9a\xcc\xbe\xe0\x61\x49\xc7\xa0\x1f\xee\x6d\x31\x91\xa2\x70\x9d\x41\x95\x12\xd7\x44\xa5\x7a\xa1\xb8\x03\x5c\x0a\xaa\x11\x93\x52\xee\x8e\xa7\x76\xfa\xfe\x58\x54\x2b\x76\x46\xa2\x9b\x35\x30\xcd\x5a\xf8\x6c\x04\xd4\x26\xf4\xdf\xc6\x65\x64\xb4\x9f\x46\x88\x6a\x44\x3c\x35\xea\x8d\xb8\xca\x93\x6b\x82\x91\xc9\x16\x73\x19\x6e\x77\xd5\x7f\xa3\x3a\x30\x31\x66\x85\x98\x98\x99\xec\x70\x5b\x9e\xbf\xcd\xb9\xc9\x5d\x8d\x3b\xc6\x0b\xfb\xe6\x2d\x3f\xed\x33\xd4\xf9\x38\x83\xd1\x3f\x01\x00\x00\xff\xff\xff\x85\xf9\xbc\x9a\x13\x00\x00")

func _000016_common_fieldsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000016_common_fieldsUpSql,
		"000016_common_fields.up.sql",
	)
}

func _000016_common_fieldsUpSql() (*asset, error) {
	bytes, err := _000016_common_fieldsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000016_common_fields.up.sql", size: 5018, mode: os.FileMode(0644), modTime: time.Unix(1725580850, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0x5b, 0x88, 0xb7, 0x2d, 0xe1, 0x6a, 0xb4, 0x0, 0x34, 0x46, 0x1, 0xf4, 0x6a, 0xf8, 0xc6, 0x4c, 0x29, 0x4d, 0x60, 0x7d, 0x16, 0xa2, 0xed, 0x25, 0xf7, 0xc4, 0x27, 0xb7, 0x0, 0xfc, 0x4e}}
	return a, nil
}

var __000017_peer_count_shard_originUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x91\x41\x73\xd3\x30\x10\x85\xef\xfe\x15\x7b\xb3\x3d\xa3\xe9\x50\xa0\x5c\x3a\x1c\x5c\x67\x53\x34\x38\x72\x91\x64\x68\x4f\x1d\x8f\x2d\x52\x4d\x89\x1c\x64\xc7\x10\x7e\x3d\x63\xc9\x71\x42\x43\xa1\x07\xa8\x8e\xfb\x66\xf7\x7b\x7a\x2f\xe5\x98\x48\x04\x99\x5c\x64\x08\x74\x0e\x2c\x97\x80\xd7\x54\x48\x01\x6b\xa5\x6c\xda\x6c\x4c\x77\xb1\x15\x77\xa5\xad\x21\x0a\x00\x00\x74\x0d\x02\x39\x4d\x32\xb8\xe2\x74\x91\xf0\x1b\x78\x8f\x37\xc4\x49\x56\x55\x8d\xad\x69\x0d\x94\x49\xbc\x44\xee\xae\xb1\x22\xcb\xbc\x5c\x0d\xc7\x1e\xd1\x5a\x47\xf8\xbd\xd6\xe9\x95\x6a\xbb\x72\xb5\x7e\x44\x4f\x73\x26\x24\x4f\x28\x93\x47\x9e\x6f\x37\x46\x7f\xdd\x28\x28\x18\xfd\x50\x20\x44\x3b\x87\xc4\x9b\x21\x9e\x4b\xf6\x88\x38\x88\xcf\x83\x20\xc9\x24\xf2\x31\x94\xa3\x18\x92\xd9\xec\x10\xf9\xf9\xfe\xf6\x88\xda\xa9\x2f\x6a\xa5\x3a\xbb\xe5\x8e\xe7\x5c\xee\xde\x3c\xe7\x48\x2f\xd9\x90\xda\xde\x4f\x0c\x1c\xe7\xc8\x91\xa5\x28\xe0\xc1\x76\xa4\xeb\xc1\xd3\xd3\x9a\xca\xad\x5e\x6a\xf3\x5f\xab\x6a\x3c\xe2\x5f\x76\xe5\x5d\xff\xb5\x2c\x4f\x7e\x6a\x5b\x63\x14\x7f\xac\x6b\x04\x3f\x73\x5f\xcd\x48\xdd\xae\x55\xbb\xaf\x6a\x17\xd8\x51\x57\xa6\x5c\x29\x90\x78\x2d\xa7\x2c\xdd\xb7\x29\x13\xc8\xe5\xb0\x96\x3f\xb8\xa8\x6b\xe2\x96\xe2\x40\x60\x86\xa9\x84\xfe\x64\x18\xf5\x27\xc3\x30\x98\xf3\x7c\x01\xd1\xc7\x24\x2b\x50\xb8\xfb\xd1\x0b\x02\x61\x61\xee\x4d\xf3\xcd\x84\xb1\x67\x46\xa7\x04\xc2\x99\x6e\xab\xfe\x6c\x1a\xbd\x24\x10\x8a\xae\xec\x74\x35\x8d\x5e\x11\x08\xaf\x94\xb2\xf8\xbd\xba\x2b\xcd\x52\x4d\xc2\xeb\x61\x9d\x89\xe1\x42\xd3\x2b\xbb\x9d\x84\x33\x02\x21\x57\xa6\x56\x3f\xfa\x66\xd3\x4e\xe3\x37\xe3\xa1\x45\x69\xca\xa5\xb2\x61\x1c\xc4\x90\x08\xe8\x0f\xfe\xf2\xe9\x1d\x72\x3c\x8c\xd1\x27\x37\x7e\xf1\x14\xdc\xbf\x7e\x09\xc2\x6f\xe8\x1a\xde\xba\x04\x82\xf8\xfc\x67\x00\x00\x00\xff\xff\x81\x70\x45\x2e\xef\x04\x00\x00")

func _000017_peer_count_shard_originUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000017_peer_count_shard_originUpSql,
		"000017_peer_count_shard_origin.up.sql",
	)
}

func _000017_peer_count_shard_originUpSql() (*asset, error) {
	bytes, err := _000017_peer_count_shard_originUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000017_peer_count_shard_origin.up.sql", size: 1263, mode: os.FileMode(0644), modTime: time.Unix(1727493408, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x42, 0xe9, 0x98, 0xa, 0xfc, 0xf1, 0x85, 0xe9, 0xd, 0x30, 0x30, 0xda, 0x15, 0x15, 0x3a, 0xf6, 0xf8, 0x87, 0xa, 0x16, 0x69, 0x20, 0x6b, 0x8b, 0xec, 0x27, 0x4c, 0xa, 0x49, 0x65, 0x2a, 0xe8}}
	return a, nil
}

var __000018_waku_req_resUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\xcd\x4e\xeb\x30\x10\x46\xd7\xc9\x53\xcc\xb2\x91\xb2\xb8\xba\x52\x56\xac\xdc\x60\xa8\x45\xea\x80\x33\x41\xed\x0a\xb9\xc9\x88\x46\x34\xb1\xeb\x1f\xc1\xe3\x23\x68\x85\x82\x44\x61\x3b\xe7\xe8\x9b\x53\x2a\xce\x90\x03\xb2\x65\xc5\x41\xdc\x80\xac\x11\xf8\x46\x34\xd8\xc0\xab\x7e\x89\x8a\x8e\x91\x7c\x50\xe4\xad\x99\x3c\xc1\x22\x4d\x86\x1e\x1a\xae\x04\xab\xe0\x5e\x89\x35\x53\x5b\xb8\xe3\xdb\x3c\x4d\xac\x33\xc1\x74\xe6\x00\x8f\x4c\x95\x2b\xa6\x16\xc5\xbf\xec\x73\x4e\xb6\x55\x95\xa7\x09\xd9\x3d\x8d\xe4\xf4\x01\x96\x75\x5d\x71\x26\xe7\x30\x0c\x23\xf9\xa0\x47\x0b\x42\x22\xbf\xe5\x6a\x0e\x3d\xd1\x84\xbf\x09\x9d\x23\x1d\xa8\x67\xe1\x47\x68\xa6\x40\x53\x40\x63\x87\xee\xab\xed\x7f\x51\x7c\x8b\xb3\x71\xe7\xe3\xee\x0f\x87\xc8\x89\xfe\x22\x1e\xc9\x7b\xfd\x4c\x2b\xed\xf7\x17\x1d\x72\xce\xb8\xf5\x49\x04\xe4\x1b\xfc\xb8\xbd\x05\xa7\xaf\x75\xd0\xe7\x43\x9a\x94\xb5\x6c\x50\x31\x21\x11\xce\xa3\xfe\x29\x4e\xc3\x31\x12\xb4\x52\x3c\xb4\x1c\x16\xa7\x96\x1c\x66\x4f\xb3\x34\xbb\x7a\x0f\x00\x00\xff\xff\x2c\x39\x72\x09\xce\x01\x00\x00")

func _000018_waku_req_resUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000018_waku_req_resUpSql,
		"000018_waku_req_res.up.sql",
	)
}

func _000018_waku_req_resUpSql() (*asset, error) {
	bytes, err := _000018_waku_req_resUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000018_waku_req_res.up.sql", size: 462, mode: os.FileMode(0644), modTime: time.Unix(1727493408, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x33, 0xae, 0xe5, 0x47, 0xbb, 0x79, 0x2a, 0x7c, 0xc7, 0x15, 0x9a, 0xd0, 0x75, 0xc1, 0x3d, 0xc9, 0x76, 0xb8, 0xc, 0x9c, 0xef, 0x63, 0xcb, 0xd, 0x5f, 0xe8, 0xee, 0xd9, 0x9b, 0xb5, 0x1a, 0x37}}
	return a, nil
}

var __000019_message_checkUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x91\x4f\x6f\xda\x40\x10\xc5\xcf\xf8\x53\xcc\xd1\x96\x38\x54\x95\x38\xe5\xb4\x31\x43\xb2\xaa\xb3\x6e\xd7\x4b\x95\x9c\xa2\x8d\x3d\x2d\x16\xd8\xeb\xec\x1f\xb5\xfd\xf6\x95\xc1\x34\x86\x02\xed\x81\x43\x7c\xdc\x37\x9e\xf7\x7b\xf3\x52\x89\x4c\x21\x28\x76\x9b\x21\xf0\x05\x88\x5c\x01\x3e\xf2\x42\x15\xf0\x43\xaf\x83\xa4\xd7\x40\xce\x4b\x72\x9d\x69\x1d\x41\x1c\x4d\xea\x0a\x0a\x94\x9c\x65\xf0\x59\xf2\x07\x26\x9f\xe0\x13\x3e\x4d\xa3\x49\x67\x8d\x37\xa5\xd9\xc0\x57\x26\xd3\x7b\x26\xe3\xd9\x87\x64\xbb\x4e\x2c\xb3\x6c\x1a\x4d\xa8\x5b\x51\x43\x56\x6f\xe0\x36\xcf\x33\x64\x62\x2c\xfa\xba\x21\xe7\x75\xd3\x01\x17\x0a\xef\x50\x8e\x45\x47\xd4\xaa\x4b\x03\xa5\x25\xed\xa9\x62\xfe\xa4\x68\x5a\x4f\xad\x57\xa6\xab\xcb\x3f\x6c\x1f\x67\xb3\x03\xb8\x2e\xbc\xb8\xf0\xf2\x8f\x19\x22\xcb\xab\xb3\x72\x43\xce\xe9\xef\x74\xaf\xdd\xea\xec\x0c\x59\x6b\xec\xc3\x6e\x10\x14\x3e\xaa\xfe\xed\xa7\xb7\x7a\xae\xbd\x1e\x1e\xa2\x49\x9a\x8b\x42\x49\xc6\x85\x82\x61\xa9\x7b\x0e\x6d\xfd\x1a\x08\x96\x82\x7f\x59\x22\xc4\x3b\x96\x29\x8c\x4c\x93\x28\xb9\x89\xa2\x0b\x7d\x0e\xb3\xe9\x8a\xca\x75\x11\xca\x92\x9c\x83\x38\x02\x00\x38\x53\x69\x2f\x59\x2a\x8d\xad\x78\x75\xe2\xb2\xbd\x3c\x0e\xdd\xe3\x1f\xc9\x97\x6a\xed\xf5\xbf\x93\x8e\xe9\x8e\x43\xef\x59\x0e\x62\x4f\xdf\x4c\x76\x17\x60\x99\x42\x39\x1c\xe0\x54\x64\x36\x9f\x8f\x7d\xbf\xad\x9f\x4f\x59\x7b\xda\x50\x43\xde\xfe\x92\x5b\xd3\x2d\xed\xfe\x5b\xe4\x12\xf9\x9d\xe8\x8f\xf4\x06\x95\x80\xc4\x05\x4a\x14\x29\x16\x70\xf4\x77\x5c\x57\xc9\xcd\xc1\x8a\xff\xed\x69\xa1\xeb\x4d\xb0\xf4\x4e\x7b\x1a\xe8\xae\xdb\xd3\x3e\xf2\xe5\x9e\xf6\xd6\xd7\xef\xe9\x77\x00\x00\x00\xff\xff\x35\x25\x57\xa4\x12\x05\x00\x00")

func _000019_message_checkUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000019_message_checkUpSql,
		"000019_message_check.up.sql",
	)
}

func _000019_message_checkUpSql() (*asset, error) {
	bytes, err := _000019_message_checkUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000019_message_check.up.sql", size: 1298, mode: os.FileMode(0644), modTime: time.Unix(1727493408, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x15, 0x17, 0x41, 0x93, 0x56, 0x36, 0x3d, 0x52, 0x0, 0x77, 0xbb, 0x1b, 0xd7, 0x88, 0x89, 0xcf, 0x48, 0x7b, 0xd5, 0xc5, 0x2c, 0xad, 0x2c, 0x33, 0xe4, 0x43, 0x1d, 0x18, 0xe8, 0xc5, 0xfd, 0xe3}}
	return a, nil
}

var __000020_dial_failureUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4f\x73\x9b\x30\x10\xc5\xef\x7c\x8a\xbd\x01\x33\x4c\xda\xf4\xef\x21\xd3\x03\xc5\xeb\x54\x53\x2c\x5a\x49\x6e\x93\x93\x87\x81\x4d\x46\x13\x8c\x5c\x21\xdc\xf1\xb7\xef\x20\x62\x43\x9d\xb4\xd1\x71\xf7\xed\xbe\xa7\xdf\x66\x02\x53\x85\xa0\xd2\xcf\x39\x02\x5b\x02\x2f\x14\xe0\x0d\x93\x4a\x42\xad\xcb\x66\x59\xea\xa6\xb7\x04\x51\x00\x00\xa0\x6b\x90\x28\x58\x9a\xc3\x37\xc1\x56\xa9\xb8\x85\xaf\x78\x9b\xf8\x96\xa5\xca\xd8\x9a\xd5\xc0\xb8\xc2\x6b\x14\x7e\x11\x5f\xe7\xf9\xd8\x26\x6b\x8d\x55\x87\x1d\xfd\xaf\xbf\xea\xee\x41\xe1\x8d\x1a\x4b\x3b\x6b\x9c\xa9\x4c\xd3\xf9\xda\x99\xde\xe9\x2d\x75\xae\xdc\xee\xfe\xb1\x2f\x2b\xb8\x54\x22\x65\x5c\xcd\xbf\xb1\xe9\x5b\xfd\xab\x27\x58\x73\xf6\x7d\x8d\x10\x1d\x43\x27\x53\xbe\x64\xf2\x4d\x26\x97\x38\x88\xaf\x82\x20\xcd\x15\x8a\x47\x54\x73\x38\xe9\x62\x31\x37\xbc\x7b\xd8\xcc\x3d\x1d\x35\xb4\x25\x67\x0f\xc2\xbb\xf9\x78\xc7\xb7\x2c\x04\xb2\x6b\x3e\x60\x9c\xd2\xc4\x20\x70\x89\x02\x79\x86\x12\xce\xa6\x23\x5d\x0f\x49\x82\x17\xce\xb6\xf1\xff\xd9\xb8\xc3\x8e\xba\xe9\x76\x47\x54\x4f\x8e\xd7\x96\x5b\xfa\x9b\xb2\xff\x2f\xe3\x12\x85\x1a\xc6\x8a\x67\xb6\xea\x3a\xf1\x83\x71\x20\x31\xc7\x4c\xc1\xfe\x62\x28\xed\x2f\x86\x62\xb0\x14\xc5\x0a\xa2\x1f\x69\xbe\x46\xe9\x3d\xa2\xd7\x09\x84\xeb\xf6\xa1\x35\xbf\xdb\x30\x1e\x7d\xa3\xcb\x04\x42\xf6\xaa\x00\xa5\xb7\x64\x7a\x77\xaa\xbf\x49\x20\xcc\x4c\xdb\x52\xe5\xb4\x69\x41\xd0\x5d\xdf\x51\x7d\x6a\xbf\x4d\x20\x14\xd4\x94\x07\xc8\xb4\xad\x7a\xed\x60\x80\x3d\x13\xbc\x3b\x09\xb8\x01\x41\x1d\xd9\x7d\x39\x6c\x3a\x09\xde\x27\x10\x4a\xaa\x7a\xab\xdd\x01\x38\xdd\x1b\xa7\xbd\xe0\x7c\xd1\x87\x31\x48\xd5\x5b\x4b\xad\x83\x85\x2e\x1b\x90\x7d\x55\x11\xd5\x33\xd5\xc7\x67\x54\xc7\x45\x41\x0c\xa9\x84\xfd\x0c\xd7\xcf\x2f\x28\x70\x7e\xb1\xf1\x40\x8f\x14\x2f\xc1\xa3\x7b\xc2\x7b\x9c\xd2\x35\x7c\xf2\xa0\x83\xf8\xea\x4f\x00\x00\x00\xff\xff\x64\x87\xc3\x40\xbb\x03\x00\x00")

func _000020_dial_failureUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000020_dial_failureUpSql,
		"000020_dial_failure.up.sql",
	)
}

func _000020_dial_failureUpSql() (*asset, error) {
	bytes, err := _000020_dial_failureUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000020_dial_failure.up.sql", size: 955, mode: os.FileMode(0644), modTime: time.Unix(1727493408, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x58, 0xf3, 0xb0, 0x5, 0x72, 0x52, 0xda, 0xc3, 0x18, 0xa7, 0x1e, 0xd, 0xbe, 0x5, 0xb8, 0xec, 0xda, 0xd9, 0x19, 0x7b, 0x37, 0x4a, 0xc2, 0x9a, 0x59, 0xe2, 0x61, 0x6c, 0x3f, 0x55, 0x7a, 0xee}}
	return a, nil
}

var __000021_missing_messagesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x92\xb1\x6e\xc2\x30\x10\x86\x77\x3f\xc5\x8d\x20\xf5\x0d\x3a\xb9\x70\x50\xab\xc1\x69\x2f\x8e\x04\x13\x0a\x89\x4b\xad\x12\x87\xc6\x4e\xa5\xbe\x7d\x55\x43\x16\x1b\xc4\x52\x75\xa8\xd7\xff\xf7\xdd\x77\x77\xff\x8c\x90\x2b\x04\xc5\x1f\x32\x04\xb1\x00\x99\x2b\xc0\xb5\x28\x54\x01\xad\x71\xce\xd8\xfd\x4a\x3b\x57\xed\xb5\x83\x09\x03\x00\x30\x0d\x14\x48\x82\x67\xf0\x4c\x62\xc5\x69\x03\x4f\xb8\xb9\x0b\x52\x7b\x72\x3e\x56\xee\x0d\x14\xae\x55\x28\x26\xcb\x2c\x3b\xc9\x4e\x5b\xcf\x3d\x08\xa9\x70\x89\x14\x89\x75\x67\xbd\xb6\x5e\x75\x47\x53\x5f\xfa\x7c\x1c\x76\x6e\xd8\x5d\x92\x01\x82\xa1\xd7\x75\xd7\x37\xa2\x49\xea\xb3\xe9\x3d\x63\x3c\x53\x48\xe7\x29\xe3\xb9\xf8\x7c\x0e\xb3\x5c\x16\x8a\xb8\x90\x0a\x5e\xdf\xb7\x91\x63\xeb\xf5\x41\xb7\xda\xf7\x5f\x14\x9a\x84\x7e\xe3\x5b\xe4\x84\x62\x29\x7f\xb6\x00\x93\x11\x62\x0a\x84\x0b\x24\x94\x33\x2c\x20\xfa\x3d\x31\xcd\x2d\x22\x16\x21\xc5\x3c\x83\x35\x1f\x83\x06\x56\x4a\xf1\x52\xe2\xf9\x30\x63\xef\xe4\x16\xe9\x82\xc3\x4a\x6e\x5f\x9e\xf4\x41\x7f\x56\xd6\xff\xd7\x04\x24\xf3\x5d\x4d\x42\xec\xfc\xab\x44\x24\x84\x57\x92\x91\xf0\xfd\x42\x42\xbe\x03\x00\x00\xff\xff\xd4\x9e\x36\x30\x1a\x04\x00\x00")

func _000021_missing_messagesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000021_missing_messagesUpSql,
		"000021_missing_messages.up.sql",
	)
}

func _000021_missing_messagesUpSql() (*asset, error) {
	bytes, err := _000021_missing_messagesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000021_missing_messages.up.sql", size: 1050, mode: os.FileMode(0644), modTime: time.Unix(1727738284, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0x4b, 0x66, 0x41, 0x3a, 0x94, 0xb3, 0x90, 0x19, 0x67, 0x35, 0xf6, 0xc9, 0x91, 0x4a, 0x70, 0x96, 0x83, 0xf4, 0x23, 0x24, 0xea, 0x4b, 0x1d, 0x24, 0xb0, 0x39, 0xb0, 0x73, 0x58, 0xf0, 0x4d}}
	return a, nil
}

var _docGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xc1\x09\x80\x30\x0c\x05\xd0\x7b\xa7\xf8\x0b\x24\xb9\xbb\x4d\xaa\xe1\x23\x95\xa6\xda\xee\x8f\x08\xde\x1e\xbc\xe1\x7b\x73\x06\xe6\x7d\x95\x62\xc6\xdc\x18\x3d\x1e\x5f\x01\xa6\xd4\xb3\x1f\xbe\x1c\x32\x1a\xf1\xa9\xfa\x0c\x48\x42\xd5\xfe\x53\x26\xd4\xca\x1b\x00\x00\xff\xff\xeb\x76\xd0\x31\x48\x00\x00\x00")

func docGoBytes() ([]byte, error) {
	return bindataRead(
		_docGo,
		"doc.go",
	)
}

func docGo() (*asset, error) {
	bytes, err := docGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc.go", size: 72, mode: os.FileMode(0644), modTime: time.Unix(1725492836, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x30, 0x2d, 0x30, 0x0, 0x64, 0x11, 0xad, 0x1, 0x5f, 0x15, 0xe9, 0x9e, 0x87, 0x6e, 0x1e, 0xc1, 0x9b, 0xf8, 0x1c, 0xfe, 0x30, 0x9, 0x86, 0x7a, 0x32, 0x4a, 0x2e, 0xcf, 0x40, 0xff, 0x5b, 0x73}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"000001_message_type.up.sql":            _000001_message_typeUpSql,
	"000002_bandwidth_protocol.up.sql":      _000002_bandwidth_protocolUpSql,
	"000003_index_truncate.up.sql":          _000003_index_truncateUpSql,
	"000004_envelope.table.up.sql":          _000004_envelopeTableUpSql,
	"000005_pushed_envelope.up.sql":         _000005_pushed_envelopeUpSql,
	"000006_status_version.up.sql":          _000006_status_versionUpSql,
	"000007_waku_push_filter.up.sql":        _000007_waku_push_filterUpSql,
	"000008_error_sending_envelope.up.sql":  _000008_error_sending_envelopeUpSql,
	"000009_peer_count.up.sql":              _000009_peer_countUpSql,
	"000010_peer_id.up.sql":                 _000010_peer_idUpSql,
	"000011_waku_push_error.up.sql":         _000011_waku_push_errorUpSql,
	"000012_waku_generic.up.sql":            _000012_waku_genericUpSql,
	"000013_peer_conn_failure.up.sql":       _000013_peer_conn_failureUpSql,
	"000014_bandwidth_column.up.sql":        _000014_bandwidth_columnUpSql,
	"000015_device_type.up.sql":             _000015_device_typeUpSql,
	"000016_common_fields.up.sql":           _000016_common_fieldsUpSql,
	"000017_peer_count_shard_origin.up.sql": _000017_peer_count_shard_originUpSql,
	"000018_waku_req_res.up.sql":            _000018_waku_req_resUpSql,
	"000019_message_check.up.sql":           _000019_message_checkUpSql,
	"000020_dial_failure.up.sql":            _000020_dial_failureUpSql,
	"000021_missing_messages.up.sql":        _000021_missing_messagesUpSql,
	"doc.go":                                docGo,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"000001_message_type.up.sql":            {_000001_message_typeUpSql, map[string]*bintree{}},
	"000002_bandwidth_protocol.up.sql":      {_000002_bandwidth_protocolUpSql, map[string]*bintree{}},
	"000003_index_truncate.up.sql":          {_000003_index_truncateUpSql, map[string]*bintree{}},
	"000004_envelope.table.up.sql":          {_000004_envelopeTableUpSql, map[string]*bintree{}},
	"000005_pushed_envelope.up.sql":         {_000005_pushed_envelopeUpSql, map[string]*bintree{}},
	"000006_status_version.up.sql":          {_000006_status_versionUpSql, map[string]*bintree{}},
	"000007_waku_push_filter.up.sql":        {_000007_waku_push_filterUpSql, map[string]*bintree{}},
	"000008_error_sending_envelope.up.sql":  {_000008_error_sending_envelopeUpSql, map[string]*bintree{}},
	"000009_peer_count.up.sql":              {_000009_peer_countUpSql, map[string]*bintree{}},
	"000010_peer_id.up.sql":                 {_000010_peer_idUpSql, map[string]*bintree{}},
	"000011_waku_push_error.up.sql":         {_000011_waku_push_errorUpSql, map[string]*bintree{}},
	"000012_waku_generic.up.sql":            {_000012_waku_genericUpSql, map[string]*bintree{}},
	"000013_peer_conn_failure.up.sql":       {_000013_peer_conn_failureUpSql, map[string]*bintree{}},
	"000014_bandwidth_column.up.sql":        {_000014_bandwidth_columnUpSql, map[string]*bintree{}},
	"000015_device_type.up.sql":             {_000015_device_typeUpSql, map[string]*bintree{}},
	"000016_common_fields.up.sql":           {_000016_common_fieldsUpSql, map[string]*bintree{}},
	"000017_peer_count_shard_origin.up.sql": {_000017_peer_count_shard_originUpSql, map[string]*bintree{}},
	"000018_waku_req_res.up.sql":            {_000018_waku_req_resUpSql, map[string]*bintree{}},
	"000019_message_check.up.sql":           {_000019_message_checkUpSql, map[string]*bintree{}},
	"000020_dial_failure.up.sql":            {_000020_dial_failureUpSql, map[string]*bintree{}},
	"000021_missing_messages.up.sql":        {_000021_missing_messagesUpSql, map[string]*bintree{}},
	"doc.go":                                {docGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
