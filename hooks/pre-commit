#!/bin/bash

echo "Running pre commit hook"

## this will retrieve all of the .go files that have been 
## changed since the last commit
STAGED_GO_FILES=$(git diff --cached --name-only -- '*.go')

## we can check to see if this is empty
if [[ $STAGED_GO_FILES == "" ]]; then
    echo "No Go Files to Update"
else
    for file in $STAGED_GO_FILES; do
        ## format our file
        go fmt $file
        ## add any potential changes from our formatting to the 
        ## commit
        git add $file
    done
fi

# check for new SQL migration files
latest_migration=$(ls -1 telemetry/sql/*.up.sql 2>/dev/null | sort -V | tail -n 1)
if [ -n "$latest_migration" ]; then
    latest_number=$(basename "$latest_migration" | cut -d'_' -f1)
    new_migrations=$(git diff --cached --name-only --diff-filter=A | grep '^telemetry/sql/.*\.up\.sql$')

    if [ -n "$new_migrations" ]; then
        for migration in $new_migrations; do
            number=$(basename "$migration" | cut -d'_' -f1)
            # enforce sequential prefix
            if [ "$number" -le "$latest_number" ]; then
                echo "Error: New migration file $migration does not follow the incremental naming structure."
                exit 1
            fi
        done

        # Check if bindata.go has changed
        if ! git diff --cached --name-only | grep -q '^telemetry/bindata\.go$'; then
            echo "Error: New SQL migration file added, but telemetry/bindata.go has not been updated."
            echo "Please run 'make generate' to update bindata.go"
            exit 1
        fi
    fi
fi

if go mod tidy -v 2>&1 | grep -q 'updates to go.mod needed'; then
    exit 1
fi

git diff --exit-code go.* &> /dev/null

if [ $? -eq 1 ]; then
    echo "go.mod or go.sum differs, please re-add it to your commit"

    exit 1
fi